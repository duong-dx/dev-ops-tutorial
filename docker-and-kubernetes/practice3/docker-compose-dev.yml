version: '3'

services:
  # for folder server
  postgres-express-server:
    container_name: postgres-express-server
    hostname: postgres-express-server
    image: postgres
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_PORT=$POSTGRES_PORT
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - express-server

  # for folder server
  redis-express-server:
    container_name: redis-express-server
    hostname: redis-express-server
    image: redis
    networks:
      - express-server

  # for folder server
  api-server:
    container_name: api-server
    hostname: api-server
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_PORT=$POSTGRES_PORT
      - POSTGRES_HOST=$POSTGRES_HOST
      - REDIS_HOST=$REDIS_HOST
      - REDIS_PORT=$REDIS_PORT
      - SERVER_PORT=$SERVER_PORT
    networks:
      - express-server

  # for folder client
  react-client:
    container_name: react-client
    hostname: react-client
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    environment:
      - PORT=$CLIENT_PORT
      - WDS_SOCKET_PORT=0
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    networks:
     - express-server

  # for folder worker
  worker:
    container_name: worker
    hostname: worker
    build:
      context: ./worker
      dockerfile: Dockerfile.dev
    volumes:
      - ./worker:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - REDIS_HOST=$REDIS_HOST
      - REDIS_PORT=$REDIS_PORT
    networks:
      - express-server

  # build nginx
  nginx:
    container_name: nginx
    hostname: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    depends_on:
      - api-server
      - react-client
    restart: always
    environment:
      - CLIENT_PORT=$CLIENT_PORT
      - SERVER_PORT=$SERVER_PORT
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf.template
    networks:
      - express-server
    ports:
      - "${NGINX_PORT}:80"
    command: /bin/bash -c "envsubst '$${CLIENT_PORT},$${SERVER_PORT}' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

volumes:
  postgres_volume:

networks:
  express-server:
    driver: bridge
